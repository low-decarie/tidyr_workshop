<style>
.reveal section code {
  font-size: 1em;
}
</style>


tidyr
========================================================
author: Etienne Low-Décarie
transition: zoom

Long vs wide data
===

Wide

```{r fig.width=6, fig.height=3,echo=F,message=FALSE}
require(tidyr)
require(gridExtra)
require(grid)
require(lattice)
require(ggplot2)
require(dplyr)
grid.newpage() #clear the graphic device
grid.table(head(iris)) #create a nice graphic table
```

Long

```{r fig.width=6, fig.height=6,echo=F}
long_iris<-gather(iris,"Measurement","Value", -Species)
grid.newpage()
grid.table(head(long_iris,15))
```


Tidy vs untidy data
===

Tidy data

1. Each variable forms a column.
2. Each observation forms a row.
3. Each type of observational unit forms a table.

Messy data
- Anything else

[Wickham, H. (2014). Tidy Data. J. Stat. Softw., 59, 1–2.](http://www.jstatsoft.org/article/view/v059i10/v59i10.pdf)


History
===

- `reshape` and `reshape2` 
  - melt and cast
  - aggregate: summary calculations
- `tidyr`
  - only data frames
  - simple unique use verbs
  - no summarising/aggregation


Going from wide to long
===
class: small-code

`gather`

```{r fig.width=6, fig.height=6,eval=F}
long_data<-gather(wide_data,
                  key,
                  value,
                  selected_columns)
```

`melt` in `reshape`(`2`)

Ways to select columns
===

- Use bare variable names.
```{r fig.width=6, fig.height=6,echo=T}
long_iris<-gather(iris,"Measurement",
                  "Value",
                  Sepal.Length,
                  Sepal.Width,
                  Petal.Length,
                  Petal.Width)

grid.table(head(long_iris))
```

Ways to select columns
===

- Select all variables between `x` and `z` with `x:z`
```{r fig.width=6, fig.height=6,echo=T}
long_iris<-gather(iris,"Measurement",
                  "Value",
                  Sepal.Length:Petal.Width)
```


Ways to select columns
===

- Exclude y with `-y`.
```{r fig.width=6, fig.height=6,echo=T}
long_iris<-gather(iris,"Measurement",
                  "Value",
                  -Species)
```


Exercise 1
===

- basic challenge
  - make the `data(BCI)` long (`require(vegan)`)
  - make the data in `data(simesants)` long (`require(simesants)`)
  
<div class="centered">

<script src="countdown.js" type="text/javascript"></script>
<script type="application/javascript">
var myCountdown2 = new Countdown({
    							time: 300, 
									width:150, 
									height:80, 
									rangeHi:"minute"	// <- no comma on last item!
									});

</script>

</div>

- extra challenge:  
use `gather` to produce a data.frame from an image file
that can be plotted using ggplot
  - use the `.nc` of world sea temperature file in the `Data` folder

Going from long to wide
===

`spread`

```{r fig.width=6, fig.height=6,eval=F}
wide_data <- spread(long_data,
                    key,
                    value)
```

(`d`/`a`)cast in `reshape`(`2`)

Going from long to wide
===

```{r fig.width=6, fig.height=6,echo=T, eval=F}
wide_iris <- spread(long_iris,
                    Species,
                    Value)
```                    

Going from long to wide
===
Each case must have a label!

```{r fig.width=6, fig.height=6,echo=T}
iris$Specimen <- rep(1:50,3) #Assumes specimen 1 of setosa
                            #matches specimen 1 of versicolor

long_iris<-gather(iris,"Measurement",
                  "Value",
                  Sepal.Length:Petal.Width)

wide_iris <- spread(long_iris,
                    Species,
                    Value)

wide_iris
``` 


Exercise 2
===


- in `data(barley)` from `require(lattice)`  
calculate the difference between `variety` *Manchuria* and *Velvet* for each site
using `spread`

<div class="centered">

<script src="countdown.js" type="text/javascript"></script>
<script type="application/javascript">
var myCountdown2 = new Countdown({
    							time: 300, 
									width:150, 
									height:80, 
									rangeHi:"minute"	// <- no comma on last item!
									});

</script>

</div>


Exercise 2
===

```{r fig.width=6, fig.height=6,echo=T}
barley_wide <- spread(barley,
                    variety,
                    yield)

```


Going long for faceting by variable
===
left: 70%

Excellent for exploratory analysis

```{r fig.width=6, fig.height=6,echo=F}
require(ggplot2)
```

```{r fig.width=6, fig.height=6,echo=T}
p <- ggplot(data=long_iris,
            aes(x=Species,
           y=Value))+
           geom_bar(stat="summary",
           fun.y="mean",
           fill=I("grey"))+
  stat_summary(fun.data = "mean_cl_boot", geom="errorbar")
```

***

```{r fig.width=6, fig.height=6,echo=F}
print(p)
```

Going long for faceting by variable
===

```{r fig.width=6, fig.height=6,echo=T}
print(p+facet_grid(.~Measurement))
```


Going long for faceting by variable
===

```{r fig.width=5, fig.height=5,echo=T}
print(p+facet_grid(Measurement~., scale="free"))
```

Exercise 3
===

-using `gather` and `facets`
- plot a histogram of each of the variables in `USArrests`
- plot the time series for each of the variables in the `airquality` dataset

<div class="centered">

<script src="countdown.js" type="text/javascript"></script>
<script type="application/javascript">
var myCountdown1 = new Countdown({
    							time: 300, 
									width:150, 
									height:80, 
									rangeHi:"minute"	// <- no comma on last item!
									});

</script>

</div>

Exercise 3
===
```{r fig.width=5, fig.height=5,echo=T}
USArrests_long <- gather(USArrests,
                         crime_var,
                         value)
p <- qplot(data=USArrests_long,
           x=value)+
  facet_grid(.~crime_var, scale="free")
print(p)
```

Seperate string variable
===

```{r fig.width=3, fig.height=3,echo=T}
seperated_iris <- separate(long_iris,
                      Measurement, 
                      c("Organ", "Dimension"))
```

Seperate string variable and spreading
===

```{r fig.width=3, fig.height=3,echo=T}
wide_iris <- spread(seperated_iris,
                    Dimension,
                    Value)
```

Plot seperated iris
===

```{r fig.width=6, fig.height=6,echo=T}
p <- ggplot(data=seperated_iris,
           aes(x=Species,
           y=Value))+
           geom_bar(stat="summary",
           fun.y="mean",
           fill=I("grey"))+
  stat_summary(fun.data = "mean_cl_boot", 
               geom="errorbar")+
  facet_grid(Organ~Dimension,
             scale="free")+
  theme(axis.text.x=element_text(angle=45))
```

***

```{r fig.width=4, fig.height=5,echo=F}
print(p)
```


Exercise 4
===

Using facets, produce an exploratory plot of `Length,	Body Width and	Caudal`
using the data from:  
Jacobson, B., Grant, J.W.A. & Peres-Neto, P.R., 2015. The interaction between the spatial distribution of resource patches and population density: consequences for intraspecific growth and morphology. Journal of Animal Ecology, 84(4), pp.934–942.  
[paper](http://onlinelibrary.wiley.com/doi/10.1111/1365-2656.12365/abstract;jsessionid=B13A863A84D13569CB0BB21F1FA10CD6.f03t01)
[data](http://datadryad.org/resource/doi:10.5061/dryad.7nb71)



<div class="centered">

<script src="countdown.js" type="text/javascript"></script>
<script type="application/javascript">
var myCountdown1 = new Countdown({
    							time: 300, 
									width:150, 
									height:80, 
									rangeHi:"minute"	// <- no comma on last item!
									});

</script>

</div>


Tidy default R outputs using broom
===

`tidy` in `broom` gets the coefficients of models into a data.frame

```{r fig.width=3, fig.height=3}
require(broom)
tidy(lm(Petal.Width~Petal.Length, data=iris))

```

Tidy default R outputs
===

`glance` gets the overall summary statistics of models into a data.frame

```{r fig.width=3, fig.height=3}
glance(lm(Petal.Width~Petal.Length, data=iris))
```


Tidy default R outputs
===

`augment` in adds to the original data.frame the individual values from the model (eg. predicted)

```{r fig.width=3, fig.height=3}
require(broom)
augmented_iris<- augment(lm(Petal.Width~Petal.Length,
                            data=iris))
p <- qplot(data=augmented_iris,
      x=Petal.Width,
      y=.fitted)+
  geom_smooth(method="lm", se=F)
print(p)

```

Feedback
===

[Feedback form](http://goo.gl/forms/3mH1UC0fH3)
http://goo.gl/forms/3mH1UC0fH3